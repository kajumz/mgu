# Generated by Django 4.1.4 on 2022-12-23 15:59

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('a', 'Согласование Экспертизы ЦТТ по РИД'), ('aa', 'Повторное Согласование Экспертизы ЦТТ по РИД'), ('b', 'Согласование Решения о необходимости правовой охраны РИД'), ('c', 'Согласование Решения Комиссии НМА'), ('d', 'Согласование Решения Комиссии о досрочном прекращении действия ОИС'), ('e', 'Согласование Решения Комиссии о продлении действия ОИС'), ('f', 'Согласование Решения Комиссии о восстановлении прав на ОИС'), ('g', 'Согласование договора распоряжения правом')], max_length=258, null=True, verbose_name='Тип Согласования')),
                ('information_agenda', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения по повестке')),
                ('information_stage', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), blank=True, null=True, size=None, verbose_name='Сведения по этапам согласования')),
                ('status', models.CharField(blank=True, choices=[('a', 'На рассмотрении экспертами'), ('b', 'Все эксперты приняли решения'), ('c', 'Закрыто положительно'), ('d', 'Закрыто отрицательно')], max_length=256, null=True, verbose_name='Статус')),
                ('date', models.DateField(auto_now=True, verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Учет Согласований и Решений',
                'verbose_name_plural': 'Учет Согласований и Решений',
            },
        ),
        migrations.CreateModel(
            name='Footing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CNT', 'Контракт/договор'), ('PLN', 'Тематический план НИР Университета'), ('QST', 'Задание'), ('OTH', 'Иное')], default='CNT', max_length=3, verbose_name='Тип основания')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='Сведения')),
            ],
            options={
                'verbose_name': 'Учет оснований для создания РИД',
                'verbose_name_plural': 'Учет оснований для создания РИД',
            },
        ),
        migrations.CreateModel(
            name='RIA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('CMP', 'Произведение'), ('INV', 'Изобретение'), ('UM', 'Полезная модель'), ('ID', 'Промышленный образец'), ('CP', 'Программа для ЭВМ'), ('DB', 'База данных'), ('ICT', 'Топология интегральной микросхемы'), ('SA', 'Селекционное достижение'), ('SOP', 'Секрет производства (ноу-хау)'), ('TM', 'Товарный знак/обозначение')], default='CMP', max_length=3, null=True, verbose_name='Вид РИД')),
                ('name', models.CharField(blank=True, max_length=258, null=True, verbose_name='Наименование РИД')),
                ('division', models.CharField(blank=True, choices=[('_1', 'Административно-хозяйственная часть'), ('_2', 'Администрация Клинического центра'), ('_3', 'Бакинский филиал'), ('_4', 'Бухгалтерия'), ('_5', 'Военно-мобилизационный отдел'), ('_6', 'Военный учебный центр'), ('_7', 'Воспитательная и внеучебная работа'), ('_8', 'Деканат факультета довузовского образования'), ('_9', 'Дирекция студенческих общежитий'), ('_10', 'Издательский центр'), ('_11', 'Институт биодизайна и моделирования сложных систем'), ('_12', 'Институт бионических технологий и инжиниринга'), ('_13', 'Институт кластерной онкологии имени профессора Л.Л.Левшина'), ('_14', 'Институт клинической медицины им. Н.В. Склифосовского'), ('_15', 'Институт клинической морфологии и цифровой патологии'), ('_16', 'Институт компьютерных наук и математического моделирования'), ('_17', 'Институт лидерства и управления здравоохранением'), ('_18', 'Институт лингвистики и межкультурной коммуникации'), ('_19', 'Институт медицинской паразитологии, тропических и трансмиссивных заболеваний им. Е.И. Марциновского'), ('_20', 'Институт молекулярной тераностики'), ('_21', 'Институт общественного здоровья им. Ф.Ф. Эрисмана'), ('_22', 'Институт профессионального образования'), ('_23', 'Институт психолого-социальной работы'), ('_24', 'Институт регенеративной медицины'), ('_25', 'Институт социальных наук'), ('_26', 'Институт стоматологии им. Е.В. Боровского'), ('_27', 'Институт трансляционной медицины и биотехнологии'), ('_28', 'Институт урологии и репродуктивного здоровья человека'), ('_29', 'Институт фармации им. А.П. Нелюбина'), ('_30', 'Институт цифровой медицины'), ('_31', 'Институт электронного медицинского образования'), ('_32', 'Исследовательский центр в сфере искусственного интелекта по направлению"Медицина"'), ('_33', 'Клинический институт детского здоровья имени Н.Ф. Филатова'), ('_34', 'Клинический центр'), ('_35', 'Конгресс-центр'), ('_36', 'Культурный центр'), ('_37', 'Лифтовая служба'), ('_38', 'Локальный этический Комитет (ЛЭК)'), ('_39', 'Междисциплинарный центр исследований общественного здоровья'), ('_40', 'Международный экспертный совет (МЭС)'), ('_41', 'Наблюдательный совет'), ('_42', 'Научно-исследовательский отдел психосоматической медицины'), ('_43', 'Научно-образовательные клинические центры'), ('_44', 'Научно-образовательный центр "Информационные и социальные технологии в медицине"'), ('_45', 'Научно-организационный отдел'), ('_46', 'Общественные организации'), ('_47', 'Общество молодых ученых'), ('_48', 'Организационный отдел'), ('_49', 'Отдел анализа кадровой политики и мониторинга организации медицинской помощи'), ('_50', 'Отдел анализа кадровой политики, образовательных программ и научных исследований'), ('_51', 'Отдел анализа образовательных программ и научных исследований'), ('_52', 'Отдел аспирантуры и докторантуры'), ('_53', 'Отдел информации и статистики'), ('_54', 'Отдел капитального строительства и реконструкции'), ('_55', 'Отдел материально-технического снабжения'), ('_56', 'Отдел миграционного учета'), ('_57', 'Отдел музейной работы'), ('_58', 'Отдел научной аналитики и прогнозирования'), ('_59', 'Отдел организации и оплаты труда'), ('_60', 'Отдел ординатуры'), ('_61', 'Отдел по работе с обучающимися'), ('_62', 'Отдел стратегического развития и интернационализации'), ('_63', 'Отдел технического надзора'), ('_64', 'Отдел техоснащения'), ('_65', 'Отдел управления инновационной деятельностью'), ('_66', 'Отдел цифровой платформы'), ('_67', 'Отдел эффективного использования материальных ресурсов'), ('_68', 'Первичная профсоюзная организация обучающихся'), ('_69', 'Первый (1 отдел)'), ('_70', 'Передовая инженерная школа "Интелектуальные системы тераностики"'), ('_71', 'Планово-экономический отдел'), ('_72', 'Плановый отдел'), ('_73', 'Попечительский совет'), ('_74', 'Профсоюзный комитет сотрудников'), ('_75', 'Редакционно-издательский отдел'), ('_76', 'Ректорат'), ('_77', 'Ресурсный центр «Медицинский Сеченовский Предуниверсарий»'), ('_78', 'Санаторий'), ('_79', 'Сеченовский лекторий'), ('_80', 'Система Activity'), ('_81', 'Система менеджмента качества'), ('_82', 'Служба вентиляции'), ('_83', 'Служба главного энергетика'), ('_84', 'Служба информационной безопасности'), ('_85', 'Служба охраны труда'), ('_86', 'Служба по благоустройству и хозяйственному обслуживанию'), ('_87', 'Служба связи и слаботочных устройств'), ('_88', 'Содействие в трудоустройстве'), ('_89', 'Спортивно-оздоровительный лагерь «Сеченовец»'), ('_90', 'Стадион "Буревестник"'), ('_91', 'Студенческие ячейки Обществ SPIE и OPTICA'), ('_92', 'Студенческий медиацентр'), ('_93', 'Студенческий совет'), ('_94', 'Студенческое научное общество имени Н.И. Пирогова'), ('_95', 'Управление безопасности'), ('_96', 'Управление качеством подготовки специалистов'), ('_97', 'Управление организационного обеспечения закупочной деятельности'), ('_98', 'Управление по общественным связям'), ('_99', 'Управление по работе с молодёжью'), ('_100', 'Управление правового обеспечения и кадровой политики'), ('_101', 'Управление программами развития и стратегическими проектами'), ('_102', 'Управление развития персонала и внутренних коммуникаций'), ('_103', 'Учебно-методическое объединение'), ('_104', 'Учебно-организационный отдел'), ('_105', 'Ученый совет'), ('_106', 'Федеральная электронная медицинская библиотека'), ('_107', 'Федеральный учебно-методический центр по паразитарным и тропическим болезням'), ('_108', 'Фундаментальная учебная библиотека'), ('_109', 'Центр "Цифрового биодизайна и персонализированного здравоохранения"'), ('_110', 'Центр аккредитации специалистов профилактической медицины'), ('_111', 'Центр аттестации научно-педагогических работников'), ('_112', 'Центр биоэлементологии и экологии человека'), ('_113', 'Центр грантовой активности'), ('_114', 'Центр доказательной медицины'), ('_115', 'Центр индустриальных технологий и предпринимательства'), ('_116', 'Центр информационных технологий'), ('_117', 'Центр клинического изучения лекарственных средств'), ('_118', 'Центр коллективного пользования «Регенеративная медицина»'), ('_119', 'Центр коммерциализации технологий'), ('_120', 'Центр крови'), ('_121', 'Центр магистерских программ'), ('_122', 'Центр международного развития'), ('_123', 'Центр Научной Карьеры'), ('_124', 'Центр омиксных технологий'), ('_125', 'Центр профессиональной патологии'), ('_126', 'Центр трансляционных лазерных технологий'), ('_127', 'Центр трансформации образования'), ('_128', 'Центральная научная медицинская библиотека'), ('_129', 'Центральный виварий'), ('_130', 'Центральный методический совет'), ('_131', 'Школы мастерства'), ('_132', 'Эксплуатационно-технический отдел АХЧ'), ('_133', 'Юридический отдел')], default='_1', max_length=128, null=True, verbose_name='Подразделение')),
                ('price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Первоначальная стоимость РИД')),
                ('documentation', models.CharField(blank=True, max_length=258, null=True, verbose_name='Подразделение, где хранится контрольный экземпляр документации')),
                ('entities', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о ранних раскрытиях сущности РИД')),
                ('dependencies', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о зависимостях РИД')),
                ('rospatent', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о Заявке в Роспатент')),
                ('payment_schedule', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о графике оплаты пошлин в Роспатент')),
                ('payment_dutes', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения по оплатам пошлин')),
                ('accounting', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о постановке РИД на бухгалтерский учет')),
                ('document_information', models.CharField(blank=True, max_length=258, null=True, verbose_name='Подтверждающие документы')),
                ('document_information_files', models.FileField(blank=True, null=True, upload_to='mydocs/', verbose_name='Файлы подтверждающих документов')),
                ('journal', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), blank=True, null=True, size=None, verbose_name='Журнал выполненных пользователями действий')),
                ('status', models.CharField(blank=True, choices=[('A', 'РИД создан'), ('B', 'РИД передан на рассмотрение'), ('C', 'РИД принят на рассмотрение'), ('D', 'Передан на рассмотрение экспертам ЦТТ'), ('E', 'Отправлен на доработку автору'), ('F', 'Отправлен повторный запрос на рассмотрение'), ('G', 'Повторно передан на рассмотрение экспертам ЦТТ'), ('H', 'Успешно пройдена проверка ЦТТ по РИД'), ('I', 'РИД отклонен после повторной проверки ЦТТ'), ('J', 'Передан на рассмотрение экспертам о необходимости правовой охраны РИД'), ('K', 'РИД не принят на основании решения о необходимости правовой охраны РИД'), ('L', 'Необходима правовая охрана РИД'), ('M', 'Получен охранный документ'), ('N', 'Передан на рассмотрение экспертам Комиссии НМА'), ('O', 'РИД не принят на основании комиссии НМА'), ('P', 'Завершено рассмотрение Комиссией НМА'), ('Q', 'РИД поставлен на бухгалтерский учет'), ('R', 'Введены сведения по договору'), ('S', 'Передан на рассмотрение экспертам по экспертизе договора использования'), ('T', 'РИД не принят на основании договора использования'), ('U', 'Ожидание ввода сведения по платежам'), ('X', 'Введены сведения по платежам')], max_length=256, null=True, verbose_name='Статус')),
                ('date_create', models.DateField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('footing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ria_app.footing', verbose_name='Основание для создания РИД')),
                ('main_ctt_worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_ctt_worker', to='users_app.author', verbose_name='Ответственный сотрудник ЦТТ')),
            ],
            options={
                'verbose_name': 'Информация о РИД',
                'verbose_name_plural': 'Информация о РИД',
            },
        ),
        migrations.CreateModel(
            name='Reestr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_query_into_rospatent', models.CharField(blank=True, max_length=256, null=True, verbose_name='№ заявки в Роспатент')),
                ('number_of_the_order_establishing_the_confidentiality_regime', models.CharField(blank=True, max_length=256, null=True, verbose_name='№ приказа установления режима конфиденциальности')),
                ('patent_number_certificate', models.CharField(blank=True, max_length=256, null=True, verbose_name='№ патента, свидетельства')),
                ('payment_document_number_on_payment_of_the_fee', models.CharField(blank=True, max_length=256, null=True, verbose_name='№ платежного документа об оплате пошлины')),
                ('number_sz_for_payment_of_the_fee', models.CharField(blank=True, max_length=256, null=True, verbose_name='№ СЗ на оплату пошлины')),
                ('mpk_mkpo_mkty', models.CharField(blank=True, max_length=256, null=True, verbose_name='МПК (для ИЗ и ПМ), МКПО (для ПО), МКТУ (для ТЗ)')),
                ('year_of_patent_validity', models.CharField(blank=True, max_length=256, null=True, verbose_name='Год действия патента')),
                ('date_of_issue_of_the_patent_certificate', models.CharField(blank=True, max_length=256, null=True, verbose_name='Дата выдачи патента, свидетельства')),
                ('patent_expiration_date', models.CharField(blank=True, max_length=256, null=True, verbose_name='Дата окончания действия патента')),
                ('date_of_filing_an_application_with_rospatent', models.CharField(blank=True, max_length=256, null=True, verbose_name='Дата подачи заявки в Роспатент')),
                ('date_of_the_order_to_establish_the_confidentiality_regime', models.CharField(blank=True, max_length=256, null=True, verbose_name='Дата приказа установления режима конфиденциальности')),
                ('input_documents', models.CharField(blank=True, max_length=256, null=True, verbose_name='Входящие документы')),
                ('output_documents', models.CharField(blank=True, max_length=256, null=True, verbose_name='Исходящие документы')),
                ('last_document', models.CharField(blank=True, max_length=256, null=True, verbose_name='Последний документ')),
                ('copyright_holder', models.CharField(blank=True, max_length=256, null=True, verbose_name='Правообладатель')),
                ('the_amount_of_royalties_paid_including_personal_income_tax', models.CharField(blank=True, max_length=256, null=True, verbose_name='Размер выплаченного авторского вознаграждения, включая НДФЛ')),
                ('the_amount_of_income_from_the_use_and_disposal_of_the_rid', models.CharField(blank=True, max_length=256, null=True, verbose_name='Размер дохода от использования и распоряжения РИД')),
                ('accrued_depreciation_thousand_rubles', models.CharField(blank=True, max_length=256, null=True, verbose_name='Начисленная амортизация (износ), тыс. руб.')),
                ('the_amount_of_the_fee', models.CharField(blank=True, max_length=256, null=True, verbose_name='Размер пошлины')),
                ('term_of_payment_of_the_fee', models.CharField(blank=True, max_length=256, null=True, verbose_name='Срок оплаты пошлины')),
                ('the_deadline_for_responding_to_correspondence', models.CharField(blank=True, max_length=256, null=True, verbose_name='Срок ответа на корреспонденцию')),
                ('countries_of_issue_of_the_patent', models.CharField(blank=True, max_length=256, null=True, verbose_name='Страны выдачи патента')),
                ('approved_form_of_protection', models.CharField(blank=True, max_length=256, null=True, verbose_name='Утвержденная форма охраны')),
                ('information_about_making_changes_to_the_registry', models.TextField(blank=True, null=True, verbose_name='Сведения о внесении изменений в реестр')),
                ('note', models.CharField(blank=True, max_length=256, null=True, verbose_name='Примечание')),
                ('decision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ria_app.decision', verbose_name='Решение комиссии')),
                ('ria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ria_app.ria', verbose_name='РИД')),
            ],
            options={
                'verbose_name': 'Реестр',
                'verbose_name_plural': 'Реестры',
            },
        ),
        migrations.CreateModel(
            name='DocumentFilesRIA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='docs/', verbose_name='Document')),
                ('rid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ria_app.ria')),
            ],
        ),
        migrations.AddField(
            model_name='decision',
            name='ria',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ria_app.ria', verbose_name='РИД'),
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holder', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о правообладателе')),
                ('recipient', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о получателе')),
                ('number', models.CharField(blank=True, max_length=258, null=True, verbose_name='Номер договора')),
                ('date', models.CharField(blank=True, max_length=258, null=True, verbose_name='Дата договора')),
                ('period', models.CharField(blank=True, max_length=258, null=True, verbose_name='Срок действия договора')),
                ('retribution', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сумма вознаграждения по договору')),
                ('target', models.CharField(blank=True, max_length=258, null=True, verbose_name='Цель заключения договора')),
                ('object_info', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения по объектам распоряжения правами')),
                ('payment_schedule', models.CharField(blank=True, max_length=258, null=True, verbose_name='График платежей, для возмездных договоров')),
                ('payment_info', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения по платежам')),
                ('rospatent_info', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения о регистрации договора в Роспатенте')),
                ('commission_decision', models.CharField(blank=True, max_length=258, null=True, verbose_name='Сведения по согласованию и принятом Комиссией ИС решении')),
                ('journal', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), blank=True, null=True, size=None, verbose_name='Журнал выполненных пользователями действий')),
                ('rid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ria_app.ria')),
            ],
            options={
                'verbose_name': 'Учет договоров',
                'verbose_name_plural': 'Учет договоров',
            },
        ),
        migrations.CreateModel(
            name='AuthorsRIA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.IntegerField(default=100, verbose_name='Процент участия')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users_app.author', verbose_name='Пользователь')),
                ('ria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ria_app.ria', verbose_name='РИД')),
            ],
        ),
    ]
